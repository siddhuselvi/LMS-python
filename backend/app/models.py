from django.db import models
from django.contrib.auth.models import User
class appinfo(models.Model):
    info_code= models.CharField(max_length=50,null=True, blank=True)
    info_value= models.CharField(max_length=255,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class test_master(models.Model):
    test_name= models.CharField(max_length=255,unique=True,null=True, blank=True)
    test_type_id=models.ForeignKey('test_type',on_delete=models.CASCADE,null=True, blank=True)
    skill_type_id= models.ForeignKey('skill_type',on_delete=models.CASCADE,null=True, blank=True)
    temp1= models.TextField(max_length=1000,null=True, blank=True)
    question_type_id=models.ForeignKey('question_type',on_delete=models.CASCADE,null=True, blank=True)
    students_count= models.IntegerField(null=True, blank=True)
    dtm_start= models.DateTimeField(null=True, blank=True)
    dtm_end= models.DateTimeField(null=True, blank=True)
   # college_id=models.ForeignKey('college_master',on_delete=models.CASCADE,null=True, blank=True)
    duration= models.IntegerField(null=True, blank=True)
    year= models.CharField(max_length=50,null=True, blank=True)
    # department_id=models.ForeignKey('department_master',on_delete=models.CASCADE,null=True, blank=True)
    # rules_id= models.ForeignKey('rules',on_delete=models.CASCADE,null=True, blank=True)
    # course_id=models.ForeignKey('courses_master',on_delete=models.CASCADE,null=True, blank=True)
    need_candidate_info= models.BooleanField(default=False)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class candidate_master(models.Model):
    batch_no=models.CharField(max_length=255,null=True, blank=True)
    user_name= models.CharField(max_length=100,unique=True,null=True, blank=True)
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE, null=True, blank=True)
    students_name= models.CharField(max_length=255,null=True, blank=True)
    registration_number= models.CharField(max_length=255,null=True, blank=True)
    gender= models.CharField(max_length=255,null=True, blank=True)
    email_id= models.EmailField(null=True, blank=True)
    mobile_number= models.CharField(max_length=255,null=True, blank=True)
    department_id=models.ForeignKey('department_master',on_delete=models.CASCADE, null=True, blank=True)
    year= models.CharField(max_length=50, null=True, blank=True)
    cgpa = models.DecimalField(max_digits=5, decimal_places=2,default=0.0, null=True, blank=True)
    marks_10th = models.DecimalField(max_digits=5, decimal_places=2, default=0.0, null=True, blank=True)
    marks_12th = models.DecimalField(max_digits=5, decimal_places=2, default=0.0, null=True, blank=True)
    marks_semester_wise= models.CharField(max_length=1000,null=True, blank=True)
    history_of_arrears = models.IntegerField(default=0, null=True, blank=True)
    standing_arrears= models.IntegerField(default=0, null=True, blank=True)
    core_of_offers= models.IntegerField(default=0, null=True, blank=True)
    it_of_offers= models.IntegerField(default=0, null=True, blank=True)
    number_of_offers= models.IntegerField(default=0, null=True, blank=True)
    text=models.TextField(max_length=1000,null=True, blank=True)
    skill_id = models.ManyToManyField('skills_master', blank=True)
    need_candidate_info= models.BooleanField(null=True, blank=True)  
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class college_admin(models.Model):
    admin_name= models.CharField(max_length=255,null=True, blank=True)
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE,null=True, blank=True)
    admin_email= models.EmailField(null=True, blank=True)
    admin_phone= models.CharField(max_length=255,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class question_paper_master(models.Model):
    question_paper_name= models.TextField(max_length=1000,null=True, blank=True)
    duration_of_test= models.IntegerField(null=True, blank=True)
    upload_type= models.CharField(max_length=1000,null=True, blank=True)
    no_of_questions= models.IntegerField(null=True, blank=True)
    test_type=models.CharField(max_length=1000,null=True, blank=True)
    topic=models.CharField(max_length=255,null=True, blank=True)
    sub_topic=models.CharField(max_length=255,null=True,blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class question_master_temp(models.Model):
    question_name_id= models.ForeignKey('question_paper_master',on_delete=models.CASCADE,null=True, blank=True)
    question_text= models.TextField(max_length=1000,null=True, blank=True)
    question_image_data = models.BinaryField(null=True,blank=True)
    option_a_image_data = models.BinaryField(null=True,blank=True)
    option_b_image_data = models.BinaryField(null=True,blank=True)
    option_c_image_data = models.BinaryField(null=True,blank=True)
    option_d_image_data = models.BinaryField(null=True,blank=True)
  #  topic_id=models.ForeignKey('topic_master',on_delete=models.CASCADE,null=True, blank=True)
    option_a= models.TextField(max_length=1000,null=True, blank=True)
    option_b= models.TextField(max_length=1000,null=True, blank=True)
    option_c= models.TextField(max_length=1000,null=True, blank=True)
    option_d= models.TextField(max_length=1000,null=True, blank=True)
   
    answer= models.TextField(max_length=1000,null=True, blank=True)
    negative_mark= models.IntegerField(null=True, blank=True)
    mark= models.IntegerField(null=True, blank=True)
    
    explain_answer= models.TextField(max_length=1000,null=True, blank=True)
   
    input_format = models.TextField(max_length=2000, null=True, blank=True)
    


class question_master(models.Model):
    question_name_id= models.ForeignKey('question_paper_master',on_delete=models.CASCADE,null=True, blank=True)
    question_text= models.TextField(max_length=20000,null=True, blank=True)
    question_image_data = models.BinaryField(null=True,blank=True)
    option_a_image_data = models.BinaryField(null=True,blank=True)
    option_b_image_data = models.BinaryField(null=True,blank=True)
    option_c_image_data = models.BinaryField(null=True,blank=True)
    option_d_image_data = models.BinaryField(null=True,blank=True)
  #  topic_id=models.ForeignKey('topic_master',on_delete=models.CASCADE,null=True, blank=True)
    option_a= models.TextField(max_length=1000,null=True, blank=True)
    option_b= models.TextField(max_length=1000,null=True, blank=True)
    option_c= models.TextField(max_length=1000,null=True, blank=True)
    option_d= models.TextField(max_length=1000,null=True, blank=True)
    option_e= models.TextField(max_length=1000,null=True, blank=True)
    option_f= models.TextField(max_length=1000,null=True, blank=True)
    answer= models.TextField(max_length=20000,null=True, blank=True)
    negative_mark= models.IntegerField(null=True, blank=True)
    mark= models.IntegerField(null=True, blank=True)
    view_hint= models.TextField(max_length=1000,null=True, blank=True)
    explain_answer= models.TextField(max_length=20000,null=True, blank=True)
    is_active= models.BooleanField(default=False)
    input_format = models.TextField(max_length=20000, null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class skills_master(models.Model):
    skill_name= models.CharField(max_length=255,null=True, blank=True)
    skill_type_id=models.ForeignKey('skill_type',on_delete=models.CASCADE,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class skill_type(models.Model):
    skill_type= models.TextField(max_length=1000,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class login(models.Model):
    email_id= models.EmailField(null=True, blank=True)
    user_name= models.CharField(max_length=100,unique=True)
    password= models.CharField(max_length=100,null=True, blank=True)
    role= models.CharField(max_length=100,null=True, blank=True)
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE, null=True, blank=True)

class test_type(models.Model):
    test_type= models.TextField(max_length=1000,null=True, blank=True)
    test_type_categories = models.CharField(max_length=1000, null=True, blank=True)
  
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class question_type(models.Model):
    question_type= models.TextField(max_length=1000,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class courses_master(models.Model):
    course_name= models.TextField(max_length=1000,null=True, blank=True)
    skill_id=models.ForeignKey('skills_master',on_delete=models.CASCADE,null=True, blank=True)
    dtm_start= models.DateTimeField(null=True, blank=True)
    dtm_end= models.DateTimeField(null=True, blank=True)
    topic_id=models.ForeignKey('topic_master',on_delete=models.CASCADE,null=True, blank=True)
    is_active= models.BooleanField(default=False)
    course_count= models.IntegerField(null=True, blank=True)
    total_enrollment= models.TextField(max_length=1000,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class course_contents(models.Model):
    course_id=models.ForeignKey('courses_master',on_delete=models.CASCADE,null=True, blank=True)
    content_id=models.ForeignKey('content_master',on_delete=models.CASCADE,null=True, blank=True)
    topic_id=models.ForeignKey('topic_master',on_delete=models.CASCADE,null=True, blank=True)
   # sub_topic_id= models.ForeignKey('topic_master',on_delete=models.CASCADE)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class course_candidates_map(models.Model):
    course_id=models.ForeignKey('courses_master',on_delete=models.CASCADE,null=True, blank=True)
    student_id=models.ForeignKey('candidate_master',on_delete=models.CASCADE,null=True, blank=True)
    dt_enrolled= models.DateField(null=True, blank=True)
    dt_validity= models.DateField(null=True, blank=True)
    status= models.CharField(max_length=100,null=True, blank=True)
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class content_master(models.Model):
    content_name = models.CharField(max_length=100, null=True, blank=True)
    content_type= models.CharField(max_length=100,null=True, blank=True)
    content_url= models.TextField(max_length=1000,null=True, blank=True)
    actual_content= models.TextField(max_length=1000,null=True, blank=True)
    status= models.CharField(max_length=255,null=True, blank=True)
    added_by= models.TextField(max_length=1000,null=True, blank=True)
    topic=models.CharField(max_length=255,null=True, blank=True)
    sub_topic=models.CharField(max_length=255,null=True, unique=True,blank=True)
    size= models.PositiveIntegerField(null=True, blank=True)
    guidelines= models.TextField(max_length=1000,null=True, blank=True)
    dtm_active_from= models.DateTimeField(null=True, blank=True)
    dtm_validity= models.DateTimeField(null=True, blank=True)
    feedback= models.TextField(max_length=1000,null=True, blank=True)
    skill_type_id=models.ForeignKey('skill_type',on_delete=models.CASCADE,null=True, blank=True)
    question_type_id=models.ForeignKey('question_type',on_delete=models.CASCADE,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class content_detail(models.Model):
    content_id=models.ForeignKey('content_master',on_delete=models.CASCADE,null=True, blank=True)
    actual_content= models.TextField(max_length=1000,null=True, blank=True)
    status= models.CharField(max_length=100,null=True, blank=True)
    content_url= models.TextField(max_length=1000,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class college_master(models.Model):
    college= models.TextField(max_length=1000,null=True, blank=True)
    college_logo= models.BinaryField(null=True,blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class department_master(models.Model):
    department= models.TextField(max_length=1000,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class topic_master(models.Model):
    topic= models.TextField(max_length=1000,null=True, blank=True)
    sub_topic= models.TextField(max_length=1000,null=True, blank=True)
    is_active= models.BooleanField(default=False)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class tests_candidates_map(models.Model):
    test_name=models.CharField(max_length=1000, null=True, blank=True)
    question_id=models.ForeignKey('question_paper_master',on_delete=models.CASCADE, null=True, blank=True)
    student_id=models.ForeignKey('candidate_master',on_delete=models.CASCADE, null=True, blank=True)
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE, null=True, blank=True)
    department_id=models.ForeignKey('department_master',on_delete=models.CASCADE, null=True, blank=True)
    dtm_start= models.DateTimeField(null=True, blank=True)
    dtm_end= models.DateTimeField(null=True, blank=True)
    dtm_schedule1_start= models.DateTimeField(null=True, blank=True)
    dtm_schedule1_end= models.DateTimeField(null=True, blank=True)
    dtm_schedule2_start= models.DateTimeField(null=True, blank=True)
    dtm_schedule2_end= models.DateTimeField(null=True, blank=True)
    attempt_count= models.IntegerField(null=True, blank=True)
    is_actual_test= models.BooleanField(default=False)
    duration= models.IntegerField(null=True, blank=True)
    duration_type= models.CharField(max_length=255, null=True, blank=True)
    year= models.CharField(max_length=50,null=True, blank=True)
    rules_id= models.ForeignKey('rules',on_delete=models.CASCADE,null=True, blank=True)
    video_required= models.BooleanField(default=False)
    is_active= models.BooleanField(default=False)
    need_candidate_info= models.BooleanField(default=False)
    total_score = models.IntegerField(null=True, blank=True)
    avg_mark = models.IntegerField(null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
    status= models.CharField(max_length=50,default=False)


class tests_candidates_answers(models.Model):
    student_id=models.ForeignKey('candidate_master',on_delete=models.CASCADE,null=True, blank=True)
    test_name=models.CharField(max_length=1000,null=True, blank=True)
    question_id= models.ForeignKey('question_master', on_delete=models.CASCADE, null=True, blank=True)
    answer= models.TextField(max_length=30000,null=True, blank=True)
    result= models.IntegerField(null=True, blank=True)
    dtm_start = models.DateTimeField(null=True, blank=True)
    submission_compile_code = models.TextField(max_length=30000, null=True, blank=True)
    compile_code_editor = models.TextField(max_length=30000, null=True, blank=True)
    dtm_end = models.DateTimeField(null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class course_schedule(models.Model):
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE,null=True, blank=True)
    department_id=models.ForeignKey('department_master',on_delete=models.CASCADE,null=True, blank=True)
    year= models.CharField(max_length=50,null=True, blank=True)    
    topic_id=models.ForeignKey('content_master',on_delete=models.CASCADE,null=True, blank=True)
    student_id=models.ForeignKey('candidate_master',on_delete=models.CASCADE,null=True, blank=True)
    trainer_id=models.ForeignKey('trainer_master',on_delete=models.CASCADE,null=True, blank=True)
    dtm_start_student= models.DateTimeField(null=True, blank=True)
    dtm_end_student= models.DateTimeField(null=True, blank=True)
    dtm_start_trainer= models.DateTimeField(null=True, blank=True)
    dtm_end_trainer= models.DateTimeField(null=True, blank=True)
    dtm_of_training= models.DateTimeField(null=True, blank=True)
    course_mode= models.CharField(max_length=255,null=True, blank=True)
    status= models.TextField(max_length=1000,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class trainer_master(models.Model):
    trainer_name= models.CharField(max_length=255,null=True, blank=True)
    address= models.TextField(max_length=1000,null=True, blank=True)
    city= models.TextField(max_length=1000,null=True, blank=True)
    country= models.CharField(max_length=255,null=True, blank=True)
    qualification= models.TextField(max_length=1000,null=True, blank=True)
    is_active= models.BooleanField(default=False)
    preferred_city= models.CharField(max_length=255,null=True, blank=True)
    mobile_no= models.CharField(max_length=255,null=True, blank=True)
    email_id= models.EmailField(null=True, blank=True)
    skill_id = models.ManyToManyField('skills_master', blank=True)
    languages_known= models.TextField(max_length=1000,null=True, blank=True)
    ifsc_code= models.TextField(max_length=1000,null=True, blank=True)
    branch_name= models.TextField(max_length=1000,null=True, blank=True)
    account_no= models.TextField(max_length=1000,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class course_content_feedback(models.Model):
    course_id=models.ForeignKey('courses_master',on_delete=models.CASCADE,null=True, blank=True)
    student_id=models.ForeignKey('candidate_master',on_delete=models.CASCADE,null=True, blank=True)
    department_id=models.ForeignKey('department_master',on_delete=models.CASCADE,null=True, blank=True)
    
    topic_id=models.ForeignKey('topic_master',on_delete=models.CASCADE,null=True, blank=True)
    dtm_session= models.DateTimeField(null=True, blank=True)
    trainer_id=models.ForeignKey('trainer_master',on_delete=models.CASCADE,null=True, blank=True)
    feedback= models.TextField(max_length=1000,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class attendance_master(models.Model):
    student_id=models.ForeignKey('candidate_master',on_delete=models.CASCADE,null=True, blank=True)
    course_id=models.ForeignKey('courses_master',on_delete=models.CASCADE,null=True, blank=True)
    test_id=models.ForeignKey('test_master',on_delete=models.CASCADE,null=True, blank=True)
    dtm_attendance= models.DateTimeField(null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class announcement_master(models.Model):
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE,null=True, blank=True)
    trainer_id=models.ForeignKey('trainer_master',on_delete=models.CASCADE,null=True, blank=True)
    dtm_start= models.DateTimeField(null=True, blank=True)
    dtm_end= models.DateTimeField(null=True, blank=True)
    content= models.TextField(max_length=1000,null=True, blank=True)
    is_active= models.BooleanField(default=False)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class trainer_skill_map(models.Model):
    trainer_id=models.ForeignKey('trainer_master',on_delete=models.CASCADE,null=True, blank=True)
    skill_id=models.ForeignKey('skills_master',on_delete=models.CASCADE,null=True, blank=True)
    skill_level= models.IntegerField(null=True, blank=True)
    dt_skill_from= models.DateField(null=True, blank=True)
    is_handson= models.BooleanField(default=False)
    last_session= models.CharField(max_length=1000,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class trainer_availability(models.Model):
    trainer_id=models.ForeignKey('trainer_master',on_delete=models.CASCADE,null=True, blank=True)
    is_available= models.BooleanField(null=True, blank=True)
    dtm_start= models.DateTimeField(null=True, blank=True)
    dtm_stop= models.DateTimeField(null=True, blank=True)
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE,null=True, blank=True)
    skill_id=models.ForeignKey('skills_master',on_delete=models.CASCADE,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class test_question_map(models.Model):
    test_id=models.ForeignKey('test_master',on_delete=models.CASCADE,null=True, blank=True)
    question_id=models.ForeignKey('question_master',on_delete=models.CASCADE,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class rules(models.Model):
     rule_name=models.CharField(max_length=100,null=True, blank=True)
     instruction=models.TextField(max_length=1000,null=True, blank=True)
     deleted= models.IntegerField(default=0, null=True, blank=True)
     created_by= models.CharField(max_length=100,null=True, blank=True)
     dtm_created= models.DateTimeField(null=True, blank=True)
     modified_by= models.CharField(max_length=100,null=True, blank=True)
     dtm_modified= models.DateTimeField(null=True, blank=True)
     remarks= models.TextField(max_length=1000,null=True, blank=True)
     dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class company_master(models.Model):
    company_name= models.CharField(max_length=1000,null=True, blank=True)
    company_profile= models.TextField(max_length=5000,null=True, blank=True)
    deleted= models.IntegerField(default=0)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class job_master(models.Model):
    company_id=models.ForeignKey('company_master',on_delete=models.CASCADE,null=True, blank=True)
    post_name = models.CharField(max_length=1000,null=True, blank=True)
    post_name_description = models.CharField(max_length=1000,null=True, blank=True)
    intern_fulltime= models.CharField(max_length=1000,null=True, blank=True)
    on_off_campus= models.BooleanField(default=False)
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE,null=True, blank=True)
    department_id=models.ForeignKey('department_master',on_delete=models.CASCADE,null=True, blank=True)
    skill_id = models.ManyToManyField('skills_master', blank=True)
    cgpa= models.CharField(max_length=255,null=True, blank=True)
    marks_10th= models.CharField(max_length=255,null=True, blank=True)
    marks_12th= models.CharField(max_length=255,null=True, blank=True)
    gender= models.CharField(max_length=1000,null=True, blank=True)
    history_of_arrears= models.CharField(max_length=1000,null=True, blank=True)
    standing_arrears= models.IntegerField(null=True, blank=True)
    location= models.TextField(max_length=5000,null=True, blank=True)
    deleted= models.IntegerField(default=0)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class event_master(models.Model):
    event_name= models.CharField(max_length=1000,null=True, blank=True)
    event_desc= models.TextField(max_length=10000,null=True, blank=True)
    dtm_start= models.DateTimeField(null=True, blank=True)
    department_id=models.ForeignKey('department_master',on_delete=models.CASCADE,null=True, blank=True)
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE,null=True, blank=True)
    deleted= models.IntegerField(default=0)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class training_attendance_sheet(models.Model):
    course_schedule_id=models.ForeignKey('course_schedule',on_delete=models.CASCADE,null=True, blank=True)
    dtm_attendance= models.DateTimeField(null=True, blank=True)
    present= models.CharField(max_length=255,null=True, blank=True)
    absent= models.CharField(max_length=255,null=True, blank=True)
    deleted= models.IntegerField(default=0)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class course_trainer_feedback(models.Model):
    trainer_id=models.ForeignKey('trainer_master',on_delete=models.CASCADE,null=True, blank=True)
    college_id=models.ForeignKey('college_master',on_delete=models.CASCADE,null=True, blank=True)
    department_id=models.ForeignKey('department_master',on_delete=models.CASCADE,null=True, blank=True)
    topic_id=models.ForeignKey('topic_master',on_delete=models.CASCADE,null=True, blank=True)
    dtm_complete= models.DateTimeField(null=True, blank=True)
    completion_status= models.CharField(max_length=255,null=True, blank=True)
    feedback= models.TextField(max_length=1000,null=True, blank=True)
    deleted= models.IntegerField(default=0,null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class student_request(models.Model):
    student_id = models.ForeignKey('candidate_master',on_delete=models.CASCADE, null=True, blank=True)
    dtm_request= models.DateTimeField(null=True, blank=True)
    student_query= models.CharField(max_length=255,null=True, blank=True)
    approved_by= models.CharField(max_length=255,null=True, blank=True)
    dtm_approved= models.DateTimeField(null=True, blank=True)
    dtm_student_update= models.DateTimeField(null=True, blank=True)
    status= models.CharField(max_length=255,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class interview_result(models.Model):
    company_id = models.ForeignKey('company_master',on_delete=models.CASCADE,null=True, blank=True)
    student_id = models.ForeignKey('candidate_master',on_delete=models.CASCADE,null=True, blank=True)
    post_name_id = models.ForeignKey('interview_master',on_delete=models.CASCADE,null=True, blank=True)
    result= models.CharField(max_length=255,null=True, blank=True)
    package= models.CharField(max_length=255,null=True, blank=True)
    dtm_offer= models.DateTimeField(null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)
class interview_master(models.Model):
    company_id = models.ForeignKey('company_master',on_delete=models.CASCADE,null=True, blank=True)
    job_id = models.ForeignKey('job_master',on_delete=models.CASCADE,null=True, blank=True)
    post_name= models.CharField(max_length=255,null=True, blank=True)
    dtm_interview= models.DateTimeField(null=True, blank=True)
    interview_type= models.CharField(max_length=255,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=255,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=255,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class interview_schedule(models.Model):
    company_id = models.ForeignKey('company_master',on_delete=models.CASCADE,null=True, blank=True)
    student_id = models.ForeignKey('candidate_master',on_delete=models.CASCADE,null=True, blank=True)
    post_name_id = models.ForeignKey('interview_master',on_delete=models.CASCADE,null=True, blank=True)
    dtm_interview= models.DateTimeField(null=True, blank=True)
    status= models.CharField(max_length=255,null=True, blank=True)
    interview_round= models.CharField(max_length=255,null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)

class user_profile(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    role = models.CharField(max_length=100, null=True, blank=True)
    college_id = models.ForeignKey('college_master', on_delete=models.CASCADE, null=True, blank=True)

    def _str_(self):
        return self.user.username



class compiler_output(models.Model):
    student_id = models.ForeignKey('candidate_master',on_delete=models.CASCADE,null=True, blank=True)
    output = models.TextField(max_length=1000, null=True, blank=True)
    deleted= models.IntegerField(default=0, null=True, blank=True)
    created_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_created= models.DateTimeField(null=True, blank=True)
    modified_by= models.CharField(max_length=100,null=True, blank=True)
    dtm_modified= models.DateTimeField(null=True, blank=True)
    remarks= models.TextField(max_length=1000,null=True, blank=True)
    dev_remarks= models.TextField(max_length=1000,null=True, blank=True)





class StudentAttendance(models.Model):
    department = models.CharField(max_length=100, null=True, blank=True)
    register_number = models.CharField(max_length=100, null=True, blank=True)
    student_name = models.CharField(max_length=200, null=True, blank=True)
    date = models.DateField(null=True, blank=True)
    session = models.CharField(max_length=2, null=True, blank=True)  # 'FN' or 'AN'
    status = models.CharField(max_length=2, null=True, blank=True)  # 'P', 'A', 'OD', etc.
    total_present = models.FloatField(null=True, blank=True)
    total_absent = models.FloatField(null=True, blank=True)
    percentage_of_attendance = models.FloatField(null=True, blank=True)

    def __str__(self):
        return f'{self.student_name} ({self.register_number}) - {self.date} {self.session} : {self.status}'










